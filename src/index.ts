/**
 * Welcome to Cloudflare Workers! This is your first worker.
 *
 * - Run `npm run dev` in your terminal to start a development server
 * - Open a browser tab at http://localhost:8787/ to see your worker in action
 * - Run `npm run deploy` to publish your worker
 *
 * Bind resources to your worker in `wrangler.toml`. After adding bindings, a type definition for the
 * `Env` object can be regenerated by running `npm run cf-typegen`.
 *
 * Learn more at https://developers.cloudflare.com/workers/
 */

export default {
  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {
    if (request.method !== 'POST') {
      return new Response('Expected POST request', { status: 405 });
    }

    let inputs;
    try {
      const requestData = await request.json();
      if (!requestData.prompt || typeof requestData.prompt !== 'string' || requestData.prompt.trim() === '') {
        return new Response(JSON.stringify({ success: false, error: 'Prompt is missing or invalid in request body' }), {
          status: 400,
          headers: { 'Content-Type': 'application/json' },
        });
      }
      // Aggiungiamo dettagli al prompt per migliorare la resa come icona
      // e per cercare di ottenere uno sfondo trasparente o bianco se il modello lo supporta.
      inputs = {
        prompt: requestData.prompt + ", icon style, simple vector, clean lines, on a white background",
        // Il modello @cf/stabilityai/stable-diffusion-xl-base-1.0 genera immagini 1024x1024.
        // Non è possibile specificare dimensioni più piccole direttamente per questo modello tramite Workers AI.
        // L'immagine verrà ridimensionata dal browser per l'anteprima.
        // num_steps: 20, // Puoi sperimentare con meno steps per generazioni più veloci. Default è solitamente 50.
      };
    } catch (e) {
      return new Response(JSON.stringify({ success: false, error: 'Invalid JSON in request body' }), {
        status: 400,
        headers: { 'Content-Type': 'application/json' },
      });
    }

    try {
      console.log(`Worker AI: Ricevuto prompt: ${inputs.prompt}`);
      const responseBlob = await env.AI.run(
        "@cf/stabilityai/stable-diffusion-xl-base-1.0", // Modello che genera immagini 1024x1024
        inputs
      );

      // La risposta da env.AI.run per i modelli text-to-image è direttamente lo stream dei byte dell'immagine.
      return new Response(responseBlob, {
        headers: {
          "content-type": "image/png", // L'output di questo modello è PNG
        },
      });

    } catch (e: any) {
      console.error("Cloudflare Worker AI Model Run Error:", e);
      return new Response(JSON.stringify({ success: false, error: `Error running AI model: ${e.message || e.toString()}` }), {
        status: 500,
        headers: { 'Content-Type': 'application/json' },
      });
    }
  },
} satisfies ExportedHandler<Env>;

// Assicurati che il tuo file worker-configuration.d.ts (o generato da `wrangler types`)
// definisca correttamente l'interfaccia Env con il binding AI:
//
// declare global {
//   interface Env {
//     AI: Ai;
//   }
// }
